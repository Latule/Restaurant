// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190407071308_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.Command", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Commands");
                });

            modelBuilder.Entity("Data.Entities.CommandMenus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CommandId");

                    b.Property<Guid>("IdCommand");

                    b.Property<Guid>("IdMenu");

                    b.Property<Guid?>("MenuId");

                    b.HasKey("Id");

                    b.HasIndex("CommandId");

                    b.HasIndex("MenuId");

                    b.ToTable("CommandMenus");
                });

            modelBuilder.Entity("Data.Entities.Invoice.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Data.Entities.Invoice.InvoiceProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IdProvider");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("InvoiceProvider");
                });

            modelBuilder.Entity("Data.Entities.Invoice.InvoiceProviderIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<double>("Price");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.ToTable("InvoiceProviderIngredient");
                });

            modelBuilder.Entity("Data.Entities.Invoice.InvoiceProviderIngredients", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IdIngredient");

                    b.Property<Guid>("IdProvider");

                    b.Property<Guid?>("IngredientId");

                    b.Property<Guid?>("ProviderId");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("ProviderId");

                    b.ToTable("InvoiceProviderIngredients");
                });

            modelBuilder.Entity("Data.Entities.Invoice.InvoiceProviders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IdInvoice");

                    b.Property<Guid>("IdProvider");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<Guid?>("ProviderId");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProviderId");

                    b.ToTable("InvoiceProviders");
                });

            modelBuilder.Entity("Data.Entities.Menu.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Data.Entities.Menu.MenuIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.ToTable("MenuIngredient");
                });

            modelBuilder.Entity("Data.Entities.Menu.MenuIngredients", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IdIngredient");

                    b.Property<Guid>("IdMenu");

                    b.Property<Guid?>("IngredientId");

                    b.Property<Guid?>("MenuId");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuIngredients");
                });

            modelBuilder.Entity("Data.Entities.Provider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Data.Entities.ProviderIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<double>("Price");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.ToTable("ProviderIngredient");
                });

            modelBuilder.Entity("Data.Entities.ProviderIngredients", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IdIngredient");

                    b.Property<Guid>("IdProvider");

                    b.Property<Guid?>("IngredientId");

                    b.Property<Guid?>("ProviderId");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("ProviderId");

                    b.ToTable("ProviderIngredients");
                });

            modelBuilder.Entity("Repositories.Dtos.StoreIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Data.Entities.CommandMenus", b =>
                {
                    b.HasOne("Data.Entities.Command", "Command")
                        .WithMany("CommandMenus")
                        .HasForeignKey("CommandId");

                    b.HasOne("Data.Entities.Menu.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");
                });

            modelBuilder.Entity("Data.Entities.Invoice.InvoiceProviderIngredients", b =>
                {
                    b.HasOne("Data.Entities.Invoice.InvoiceProviderIngredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId");

                    b.HasOne("Data.Entities.Invoice.InvoiceProvider", "Provider")
                        .WithMany("ProviderIngredients")
                        .HasForeignKey("ProviderId");
                });

            modelBuilder.Entity("Data.Entities.Invoice.InvoiceProviders", b =>
                {
                    b.HasOne("Data.Entities.Invoice.Invoice", "Invoice")
                        .WithMany("InvoiceProviders")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("Data.Entities.Invoice.InvoiceProvider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId");
                });

            modelBuilder.Entity("Data.Entities.Menu.MenuIngredients", b =>
                {
                    b.HasOne("Data.Entities.Menu.MenuIngredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId");

                    b.HasOne("Data.Entities.Menu.Menu", "Menu")
                        .WithMany("MenuIngredients")
                        .HasForeignKey("MenuId");
                });

            modelBuilder.Entity("Data.Entities.ProviderIngredients", b =>
                {
                    b.HasOne("Data.Entities.ProviderIngredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId");

                    b.HasOne("Data.Entities.Provider", "Provider")
                        .WithMany("ProviderIngredients")
                        .HasForeignKey("ProviderId");
                });
#pragma warning restore 612, 618
        }
    }
}
